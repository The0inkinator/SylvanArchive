---
---

<div class="searchBarContainer">
  <div tabindex="0" id="searchBar">
    <div id="searchBarLogo"></div>
    <input tabindex="1" id="searchBarInput" value="Start Searching" type="text" />
    <button id="closeButton">
      <div></div>
      <div></div>
    </button>
    <div id="searchBarTitle">Sylvan Archive</div>
  </div>
</div>

<script>
  const searchBar = document.getElementById("searchBar") as HTMLDivElement;
  const logo = document.getElementById("searchBarLogo") as HTMLDivElement;
  const input = document.getElementById("searchBarInput") as HTMLInputElement;
  const title = document.getElementById("searchBarTitle") as HTMLDivElement;
  const closeButton = document.getElementById("closeButton") as HTMLDivElement;
  const titleWidth = window.getComputedStyle(title).width;

  let barClicked = false;
  let barScrolled = false;
  let xHovered = false;

  closeButton.addEventListener("mouseenter", () => {
    xHovered = true;
  });
  closeButton.addEventListener("mouseleave", () => {
    xHovered = false;
  });

  function visStateBarScrolled() {
    searchBar.style.width = "var(--MenuHeight)";
    searchBar.style.gridTemplateColumns = "0 var(--MenuHeight) 0 1fr 0 0";
    // logo.style.justifySelf = "center";
    title.style.display = "none";
    title.style.transition = "width 0.25s";
    title.style.width = "0";
    closeButton.style.display = "none";
    barClicked = false;
    barScrolled = true;
  }

  function visStateBar() {
    searchBar.style.width = `calc((var(--MenuHeight) * 1.2) + ${titleWidth})`;
    searchBar.style.gridTemplateColumns = "0 var(--MenuHeight) 0 80% 0 0";
    // logo.style.justifySelf = "end";
    title.style.display = "block";
    title.style.transition = "width 0.25s";
    title.style.width = "100%";
    closeButton.style.display = "none";
    barClicked = false;
  }

  function visStateBarClicked() {
    searchBar.style.width =
      "calc(var(--MenuHeight) * 2.2 + var(--SearchBarWidth))";
    searchBar.style.gridTemplateColumns = "0 var(--MenuHeight) 1fr 0 var(--MenuHeight) 0";
    input.style.cursor = "text";
    // logo.style.justifySelf = "center";

    title.style.display = "none";
    title.style.transition = "width 0s";
    title.style.width = "0";
    closeButton.style.display = "grid";
    barClicked = true;
  }

  if (window.scrollY > 0) {
      visStateBarScrolled();
    } else {
      visStateBar();
      barScrolled = false;
    }

  window.addEventListener("scroll", () => {
    if (window.scrollY > 0) {
      visStateBarScrolled();
    } else {
      visStateBar();
      barScrolled = false;
    }
  });

  searchBar.addEventListener("click", () => {
    if (barClicked === false) {
      visStateBarClicked();
    } else if (xHovered === true) {
      if (barScrolled === true) {
        visStateBarScrolled();
      } else {
        visStateBar();
      }
    }
  });
</script>

<style>
  .searchBarContainer {
    pointer-events: auto;
    display: flex;
    grid-row: 1;
  }

  #searchBar {
    all: unset;
    overflow: hidden;
    background-color: white;
    filter: drop-shadow(0px 0px 5px var(--ShadowGreen));
    height: var(--MenuHeight);
    width: calc(var(--MenuHeight) * 4.2);
    border-radius: calc(var(--MenuHeight) / 5);
    cursor: pointer;
    transition: width 0.25s;
    display: grid;
    grid-template-columns: var(--MenuHeight) 0 1fr 0;
    grid-template-rows: var(--MenuHeight);
    place-items: center;
  }

  #searchBar:focus-within {
    box-shadow: 0 0 0 2px var(--ShadowGreen);
  }

  #searchBarLogo {
    height: 80%;
    aspect-ratio: 1/1;
    background-image: url("../../logos/sylvanArchiveLogo.svg");
    grid-column: 2;
    /* background-color: blue; */
  }

  input {
    all: unset;
    width: 100%;
    transition: width 0.25s;
    grid-column: 3;
    /* background-color: green; */
  }

  #searchBarTitle {
    font-family: var(--HeadingFont);
    font-size: calc(var(--MenuHeight) / 2);
    white-space: nowrap;
    width: auto;
    transition: width 0.25s;
    padding-left: 2px;
    /* background-color: red; */
    grid-column: 4;
  }

  #closeButton {
    all: unset;
    display: none;
    height: 80%;
    aspect-ratio: 1/1;
    place-items: center;
    grid-column: 5;
    /* background-color: blue; */
  }

  #closeButton > * {
    width: 70%;
    height: 10%;
    background-color: lightgrey;
    grid-row: 1;
    grid-column: 1;
    align-items: center;
  }

  #closeButton > :nth-child(1) {
    transform: rotate(45deg);
  }
  #closeButton > :nth-child(2) {
    transform: rotate(-45deg);
  }
</style>
