---
import NavCard from "./NavCard.astro";
const { NavCardList } = Astro.props;
---

<div class="navCardGrid">
  {
    NavCardList.map(
      (GenNavCard: {
        title: string;
        subtitle: string;
        imgSrc: string;
        link: string;
      }) => {
        return (
          <NavCard
            title={GenNavCard.title}
            subtitle={GenNavCard.subtitle}
            imgSrc={GenNavCard.imgSrc}
            link={GenNavCard.link}
          />
        );
      }
    )
  }
</div>

<style>
  .navCardGrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, var(--NavCardSize));
    width: var(--NavGridMargin);
    max-width: calc(var(--NavCardSize) * 5);
    justify-content: center;
  }
</style>

<script>
//Set opening grid max width
  const navCardGrid = document.getElementsByClassName(
    "navCardGrid"
  )[0] as HTMLDivElement;

  const gridLength = navCardGrid.childElementCount;

  if (gridLength >= 5) {
    navCardGrid.style.maxWidth = "calc(var(--NavCardSize) * 5)";
  } else {
    navCardGrid.style.maxWidth = `calc(var(--NavCardSize) * ${gridLength})`;
  }

//Set upper margin

const contentContainer = document.getElementById("contentContainer") as HTMLDivElement;

let currentGridLength = window.getComputedStyle(navCardGrid).getPropertyValue("grid-template-columns").split(" ").length;

console.log(currentGridLength)
  
  window.addEventListener("resize", () => {
    currentGridLength = window.getComputedStyle(navCardGrid).getPropertyValue("grid-template-columns").split(" ").length;
    if ((currentGridLength / gridLength) < 1) {
      contentContainer.style.marginTop = "var(--ContContainUpperMargin)";

    } else {contentContainer.style.marginTop = "auto";
}
    })


</script>
