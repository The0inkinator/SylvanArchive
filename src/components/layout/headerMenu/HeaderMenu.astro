---
import HomeButton from "./homeButton.astro";
import BookmarkButton from "./BookmarkButton.astro";
import SearchBar from "./SearchBar.astro";
import AccountButton from "./AccountButton.astro";
---

<div class="menu">
  <HomeButton />
  <SearchBar />
  <BookmarkButton />
  <AccountButton />
</div>

<style>
  .menu {
    margin: auto;
    display: flex;
    gap: calc(var(--MenuHeight) / 4);
  }

  @media screen and (max-width: 480px) {
    .menu {
      display: grid;
      margin-left: calc(var(--MenuHeight) / 4);
      margin-top: calc(var(--MenuHeight) / 4);
    }
  }
</style>

<script>
  //Name Elements
  const searchBar = document.getElementById("searchBar") as HTMLDivElement;
  const logo = document.getElementById("searchBarLogo") as HTMLDivElement;
  const input = document.getElementById("searchBarInput") as HTMLInputElement;
  const title = document.getElementById("searchBarTitle") as HTMLDivElement;
  const closeButton = document.getElementById("closeButton") as HTMLDivElement;
  const titleWidth = window.getComputedStyle(title).width;

  //Define button logic states
  let barClicked = false;
  let barScrolled = false;
  let xHovered = false;

  //Define hovers
  closeButton.addEventListener("mouseenter", () => {
    xHovered = true;
  });
  closeButton.addEventListener("mouseleave", () => {
    xHovered = false;
  });

  //Create style states
  function visStateBarScrolled() {
    searchBar.style.width = "var(--MenuHeight)";
    searchBar.style.gridTemplateColumns = "0 var(--MenuHeight) 0 1fr 0 0";
    title.style.display = "none";
    title.style.transition = "width 0.25s";
    title.style.width = "0";
    closeButton.style.display = "none";
    barClicked = false;
    barScrolled = true;
  }

  function visStateBar() {
    searchBar.style.width = `calc((var(--MenuHeight) * 1.2) + ${titleWidth})`;
    searchBar.style.gridTemplateColumns = "0 var(--MenuHeight) 0 80% 0 0";
    title.style.display = "block";
    title.style.transition = "width 0.25s";
    title.style.width = "100%";
    closeButton.style.display = "none";
    barClicked = false;
  }

  function visStateBarClicked() {
    searchBar.style.width =
      "calc(var(--MenuHeight) * 2.2 + var(--SearchBarWidth))";
    searchBar.style.gridTemplateColumns =
      "0 var(--MenuHeight) 1fr 0 var(--MenuHeight) 0";
    input.style.cursor = "text";
    title.style.display = "none";
    title.style.transition = "width 0s";
    title.style.width = "0";
    closeButton.style.display = "grid";
    barClicked = true;
  }

  //Create event listeners
  if (window.scrollY > 0) {
    visStateBarScrolled();
  } else {
    visStateBar();
    barScrolled = false;
  }

  window.addEventListener("scroll", () => {
    if (window.scrollY > 0) {
      visStateBarScrolled();
    } else {
      visStateBar();
      barScrolled = false;
    }
  });

  searchBar.addEventListener("click", () => {
    if (barClicked === false) {
      visStateBarClicked();
    } else if (xHovered === true) {
      if (barScrolled === true) {
        visStateBarScrolled();
      } else {
        visStateBar();
      }
    }
  });
</script>
